{
  "id": "",
  "meta": {
    "instanceId": "",
    "templateCredsSetupCompleted": true
  },
  "name": "UNSUBSCRIBE MANAGER FOR LEAD GEN",
  "tags": [
    {
      "id": "",
      "name": "PORTFOLIO",
      "createdAt": "2025-10-30T14:01:29.686Z",
      "updatedAt": "2025-10-30T14:01:29.686Z"
    }
  ],
  "nodes": [
    {
      "id": "",
      "name": "Watch New replies",
      "type": "n8n-nodes-base.gmailTrigger",
      "position": [
        -1536,
        -16
      ],
      "parameters": {
        "filters": {
          "includeSpamTrash": true
        },
        "pollTimes": {
          "item": [
            {
              "mode": "everyX",
              "unit": "minutes",
              "value": 5
            }
          ]
        }
      },
      "credentials": {
        "gmailOAuth2": {
          "id": "",
          "name": "Gmail account"
        }
      },
      "retryOnFail": true,
      "typeVersion": 1.3
    },
    {
      "id": "",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        -1016,
        208
      ],
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {
          "maxTokens": 20,
          "temperature": 0.1
        }
      },
      "credentials": {
        "openAiApi": {
          "id": "",
          "name": "OpenAi account"
        }
      },
      "typeVersion": 1.2
    },
    {
      "id": "",
      "name": "DETECT INTENT",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "position": [
        -1088,
        -16
      ],
      "parameters": {
        "text": "=You are a message intent detector for outreach emails. \nYour job is to determine if this message means the sender wants to stop receiving emails or unsubscribe.\n\nReply strictly with one word:\n- \"unsubscribe\" → if they indicate they don't want further contact (even indirectly)\n- \"keep\" → if they are interested, neutral, or unrelated.\n\nMessage:\n{{ $json.snippet }}",
        "batching": {},
        "promptType": "define"
      },
      "retryOnFail": true,
      "typeVersion": 1.7
    },
    {
      "id": "",
      "name": "NORMALIZE AI OUTPUT",
      "type": "n8n-nodes-base.code",
      "position": [
        -736,
        -16
      ],
      "parameters": {
        "jsCode": "return items.map(item => {\n  let aiResponse = \"\";\n\n  const json = item.json;\n  if (json.message?.[0]?.content) {\n    aiResponse = json.message[0].content;\n  } else if (json.data) {\n    aiResponse = json.data;\n  } else if (json.choices?.[0]?.message?.content) {\n    aiResponse = json.choices[0].message.content;\n  } else if (json.text) {\n    aiResponse = json.text;\n  }\n\n  aiResponse = aiResponse?.trim().toLowerCase() || \"\";\n\n  const isUnsubscribe =\n    aiResponse.includes(\"unsubscribe\") ||\n    aiResponse.includes(\"remove me\") ||\n    aiResponse.includes(\"opt out\") ||\n    aiResponse.includes(\"stop emailing\") ||\n    aiResponse.includes(\"do not contact\");\n\n  return {\n    json: {\n      ...json,\n      aiResponse,\n      isUnsubscribe\n    }\n  };\n});"
      },
      "retryOnFail": true,
      "typeVersion": 2
    },
    {
      "id": "",
      "name": "UNSUBSCRIBE?",
      "type": "n8n-nodes-base.if",
      "position": [
        -512,
        -16
      ],
      "parameters": {
        "options": {},
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "",
              "operator": {
                "name": "filter.operator.equals",
                "type": "string",
                "operation": "equals"
              },
              "leftValue": "={{ $json.text }}",
              "rightValue": "unsubscribe"
            }
          ]
        }
      },
      "retryOnFail": true,
      "typeVersion": 2.2
    },
    {
      "id": "",
      "name": "CHECK MAIN SHEET",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        608,
        -16
      ],
      "parameters": {
        "options": {},
        "filtersUI": {
          "values": [
            {
              "lookupValue": "={{ \n  $('Watch New replies').item.json.From.match(/<([^>]+)>/)?.[1]?.trim().toLowerCase() || \n  $('Watch New replies').item.json.From.trim().toLowerCase() \n}}",
              "lookupColumn": "EMAIL"
            }
          ]
        },
        "sheetName": {
          "__rl": true,
          "mode": "id",
          "value": "your-google-sheet-id"
        },
        "documentId": {
          "__rl": true,
          "mode": "id",
          "value": "your-google-sheet-id"
        },
        "authentication": "serviceAccount"
      },
      "credentials": {
        "googleApi": {
          "id": "",
          "name": "Google Service Account account 10"
        }
      },
      "retryOnFail": true,
      "typeVersion": 4.7
    },
    {
      "id": "",
      "name": "Delete rows or columns from sheet",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        832,
        -16
      ],
      "parameters": {
        "operation": "delete",
        "sheetName": {
          "__rl": true,
          "mode": "id",
          "value": "your-google-sheet-id"
        },
        "documentId": {
          "__rl": true,
          "mode": "id",
          "value": "your-google-sheet-id"
        },
        "startIndex": "={{ $json.row_number }}",
        "authentication": "serviceAccount"
      },
      "credentials": {
        "googleApi": {
          "id": "",
          "name": "Google Service Account account 10"
        }
      },
      "retryOnFail": true,
      "typeVersion": 4.7
    },
    {
      "id": "",
      "name": "ADD TO UNSUBSCRIBE",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        384,
        -16
      ],
      "parameters": {
        "columns": {
          "value": {
            "DATE": "={{ new Date().toISOString().split('T')[0] }}",
            "EMAIL": "={{ $('IS EMAIL THERE?').first().json.Email }}",
            "WHERE": "UNSUBSCRIBE MESSAGE REPLY",
            "MESSAGE": "={{ $('Watch New replies').item.json.snippet }}"
          },
          "schema": [
            {
              "id": "EMAIL",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "EMAIL",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "DATE",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "DATE",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "WHERE",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "WHERE",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "MESSAGE",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "MESSAGE",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            }
          ],
          "mappingMode": "defineBelow",
          "matchingColumns": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {
          "useAppend": true
        },
        "operation": "append",
        "sheetName": {
          "__rl": true,
          "mode": "id",
          "value": "your-google-sheet-id"
        },
        "documentId": {
          "__rl": true,
          "mode": "id",
          "value": "your-google-sheet-id"
        },
        "authentication": "serviceAccount"
      },
      "credentials": {
        "googleApi": {
          "id": "",
          "name": "Google Service Account account 10"
        }
      },
      "executeOnce": false,
      "retryOnFail": true,
      "typeVersion": 4.7
    },
    {
      "id": "",
      "name": "ADD UNSUBSCRIBE TO EMAIL",
      "type": "n8n-nodes-base.gmail",
      "position": [
        1056,
        -16
      ],
      "webhookId": "",
      "parameters": {
        "labelIds": [
          "Label_2476288409640151649"
        ],
        "messageId": "={{ $('Watch New replies').item.json.id }}",
        "operation": "addLabels"
      },
      "credentials": {
        "gmailOAuth2": {
          "id": "",
          "name": "Gmail account"
        }
      },
      "retryOnFail": true,
      "typeVersion": 2.1
    },
    {
      "id": "",
      "name": "Get unsubscribe sheet",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        -288,
        -16
      ],
      "parameters": {
        "options": {},
        "sheetName": {
          "__rl": true,
          "mode": "id",
          "value": "your-google-sheet-id"
        },
        "documentId": {
          "__rl": true,
          "mode": "id",
          "value": "your-google-sheet-id"
        },
        "authentication": "serviceAccount"
      },
      "credentials": {
        "googleApi": {
          "id": "",
          "name": "Google Service Account account 10"
        }
      },
      "retryOnFail": true,
      "typeVersion": 4.7,
      "alwaysOutputData": true
    },
    {
      "id": "",
      "name": "IS EMAIL THERE?",
      "type": "n8n-nodes-base.code",
      "position": [
        -64,
        -16
      ],
      "parameters": {
        "jsCode": "//----------------------------------------------------\n// Inputs\n//----------------------------------------------------\nconst unsubscribed = $items(\"Get unsubscribe sheet\").map(i => \n  (i.json.Email || \"\").toLowerCase().trim()\n);\nconst currentEmail = $('Watch New replies').item.json.From\n  .match(/<([^>]+)>/)?.[1]?.toLowerCase().trim() || \n  $('Watch New replies').item.json.From.toLowerCase().trim();\n\n//----------------------------------------------------\n// Check and decide\n//----------------------------------------------------\nif (!unsubscribed.includes(currentEmail)) {\n  return [{ json: { Email: currentEmail}}];\n} else {\n  return []; // Skip if already in the sheet\n}"
      },
      "typeVersion": 2
    },
    {
      "id": "",
      "name": "IF IT ALREADY EXISTS, DO NOTHING",
      "type": "n8n-nodes-base.if",
      "position": [
        160,
        -16
      ],
      "parameters": {
        "options": {},
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "",
              "operator": {
                "type": "string",
                "operation": "equals"
              },
              "leftValue": "={{ $json.Email }}",
              "rightValue": "={{ $('Get unsubscribe sheet').item.json.EMAIL }}"
            }
          ]
        }
      },
      "typeVersion": 2.2
    },
    {
      "id": "",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "position": [
        -1312,
        -16
      ],
      "parameters": {
        "options": {},
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "loose"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "",
              "operator": {
                "type": "string",
                "operation": "contains"
              },
              "leftValue": "={{ $json.From }}",
              "rightValue": "=your personal email"
            }
          ]
        },
        "looseTypeValidation": true
      },
      "retryOnFail": true,
      "typeVersion": 2.2
    },
    {
      "id": "",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1632,
        -672
      ],
      "parameters": {
        "color": 6,
        "width": 288,
        "height": 816,
        "content": "## GMAIL\nYou can use any email provider. GMAIL is used in this instance.\n\nConnect using OAuth Credentials\n\nIt is a trigger set to run anytime a new email is received.\n\nInclude **SPAM**; to catch every email and **TRASH**; in the event you delete it before the node runs."
      },
      "typeVersion": 1
    },
    {
      "id": "",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1328,
        -432
      ],
      "parameters": {
        "width": 272,
        "height": 400,
        "content": "Here, I check if the replies are from my other email accounts; no need to work on them. You can also exclude any other account by using **\"OR\"**"
      },
      "typeVersion": 1
    },
    {
      "id": "",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1056,
        -320
      ],
      "parameters": {
        "color": 3,
        "width": 528,
        "height": 288,
        "content": "## OPEN AI  (Prompt included)\n**Detect Intent** My AI checks the response and summaries in two words ** \"Unsubscribe\" or \"Keep\" ** if the prospect is interested in what I am selling or if they'd rather not receive more emails from me.\n\n## NORMALIZE AI OUTPUT\n\nThis is like a double guard from the output the AI provides; the code ensures only two words are passed on to the **IF** node"
      },
      "typeVersion": 1
    },
    {
      "id": "",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -128,
        -320
      ],
      "parameters": {
        "color": 5,
        "width": 656,
        "height": 288,
        "content": "## UNSUBSCRIBE\n**Checks** Is this email already in the unsubscribe sheet?\n\n**Yes** - Do Nothing\n**No** Add to the Unsubscribe sheet\n\n## MAIN SHEET\n\nThen check the main sheet and delete from there. **safest option** or you could update the row with a new column stating \"unsubscribe\" and ensure when sending emails, that is checked first."
      },
      "typeVersion": 1
    },
    {
      "id": "",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        928,
        -240
      ],
      "parameters": {
        "color": 4,
        "width": 272,
        "height": 176,
        "content": "## TAGS in GMAIL\nAdd an unsubscribe tag to GMAIL (optional)"
      },
      "typeVersion": 1
    }
  ],
  "active": false,
  "pinData": {},
  "settings": {
    "timezone": "Africa/Lagos",
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "UNrVZbiiSpgbbt9H",
    "availableInMCP": false,
    "executionOrder": "v1",
    "saveExecutionProgress": false,
    "timeSavedPerExecution": 5,
    "saveDataSuccessExecution": "none"
  },
  "versionId": "",
  "connections": {
    "If": {
      "main": [
        [],
        [
          {
            "node": "DETECT INTENT",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "UNSUBSCRIBE?": {
      "main": [
        [
          {
            "node": "Get unsubscribe sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DETECT INTENT": {
      "main": [
        [
          {
            "node": "NORMALIZE AI OUTPUT",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IS EMAIL THERE?": {
      "main": [
        [
          {
            "node": "IF IT ALREADY EXISTS, DO NOTHING",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CHECK MAIN SHEET": {
      "main": [
        [
          {
            "node": "Delete rows or columns from sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "DETECT INTENT",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Watch New replies": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ADD TO UNSUBSCRIBE": {
      "main": [
        [
          {
            "node": "CHECK MAIN SHEET",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "NORMALIZE AI OUTPUT": {
      "main": [
        [
          {
            "node": "UNSUBSCRIBE?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get unsubscribe sheet": {
      "main": [
        [
          {
            "node": "IS EMAIL THERE?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF IT ALREADY EXISTS, DO NOTHING": {
      "main": [
        [],
        [
          {
            "node": "ADD TO UNSUBSCRIBE",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete rows or columns from sheet": {
      "main": [
        [
          {
            "node": "ADD UNSUBSCRIBE TO EMAIL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
}
